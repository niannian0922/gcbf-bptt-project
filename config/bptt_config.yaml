# BPTT training configuration with dynamic alpha support

# 实验名称
run_name: "GCBF+_BTN_BPTT"

# 环境参数
env:
  num_agents: 8                   # 环境中的智能体数量
  area_size: 1.0                  # 方形环境的大小
  car_radius: 0.05                # 每个智能体的半径（用于碰撞检测）
  comm_radius: 0.5                # 图构建的通信半径
  mass: 0.1                       # 每个智能体的质量
  dt: 0.03                        # 仿真时间步长
  cbf_alpha: 1.0                  # CBF安全约束的Alpha参数（h_dot + alpha*h >= 0）

# 网络参数
networks:
  # 策略GNN参数
  policy:
    input_dim: 9                  # state_dim (4) + goal position (2) + obstacle info (3)
    node_dim: 7                   # 位置（2）+ 速度（2）+ 目标方向（2）+ 智能体指示符（1）
    edge_dim: 4                   # 相对位置（2）+ 相对速度（2）
    hidden_dim: 64                # 隐藏层维度
    n_layers: 2                   # GNN层数
    msg_hidden_sizes: [64, 64]    # 消息网络的隐藏层大小
    aggr_hidden_sizes: [64]       # 注意力网络的隐藏层大小
    update_hidden_sizes: [64, 64] # 更新网络的隐藏层大小
  
  # CBF GNN参数
  cbf:
    node_dim: 7                   # 位置（2）+ 速度（2）+ 目标方向（2）+ 智能体指示符（1）
    edge_dim: 4                   # 相对位置（2）+ 相对速度（2）
    hidden_dim: 64                # 隐藏层维度
    n_layers: 2                   # GNN层数
    msg_hidden_sizes: [64, 64]    # 消息网络的隐藏层大小
    aggr_hidden_sizes: [64]       # 注意力网络的隐藏层大小
    update_hidden_sizes: [64, 64] # 更新网络的隐藏层大小

# 训练参数
training:
  training_steps: 10000           # 训练步数总数
  horizon_length: 50              # BPTT rollout的时间范围长度
  eval_horizon: 100               # 评估rollout的时间范围长度
  eval_interval: 100              # 评估间隔
  save_interval: 1000             # 模型保存间隔
  learning_rate: 0.001            # Adam优化器的学习率
  max_grad_norm: 1.0              # 最大梯度范数（用于裁剪）
  
  # 学习率调度器
  use_lr_scheduler: true          # 是否使用学习率调度器
  lr_step_size: 2000              # 学习率调度器的步长
  lr_gamma: 0.5                   # 学习率调度器的乘数
  
  # 时序稳定性的梯度衰减
  gradient_decay_rate: 0.95       # 梯度随时间衰减的速率

  # 损失权重
  goal_weight: 1.0                # 目标到达损失的权重
  safety_weight: 10.0             # 安全损失的权重（CBF违反）
  control_weight: 0.1             # 控制努力损失的权重
  jerk_weight: 0.05               # 抖动惩罚的权重（动作变化率）
  alpha_reg_weight: 0.01          # alpha正则化的权重（鼓励更小的alpha值）  cbf_alpha: 1.0                  # CBF条件中的Alpha参数（h_dot + alpha*h >= 0） 
